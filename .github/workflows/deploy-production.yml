name: Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
      - master
      - production
      
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.7.0 # Change to your desired Node.js version

      - name: Install dependencies
        run: npm install
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: build project
        run: npm run build

      - name: Setup environment
        run: |
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "RESET_PASS_APP_URL=${{ secrets.RESET_PASS_APP_URL }}" >> .env
          echo "FAWS_S3_BUCKET=${{ secrets.FAWS_S3_BUCKET }}" >> .env
          echo "FAWS_ACCESS_KEY_ID=${{ secrets.FAWS_ACCESS_KEY_ID }}" >> .env
          echo "FAWS_SECRET_ACCESS_KEY=${{ secrets.FAWS_SECRET_ACCESS_KEY }}" >> .env
          echo "FAWS_DEFAULT_REGION=${{ secrets.FAWS_DEFAULT_REGION }}" >> .env
          echo "SALT=${{ secrets.SALT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SENDINBLUE_API_KEY=${{ secrets.SENDINBLUE_API_KEY }}" >> .env
          echo "JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "TEST_JWT_TOKEN=${{ secrets.TEST_JWT_TOKEN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_FCM_SERVICE_KEY_LEGACY=${{ secrets.FIREBASE_FCM_SERVICE_KEY_LEGACY }}" >> .env
          echo "EXPO_PROJECT_SLUG=${{ secrets.EXPO_PROJECT_SLUG }}" >> .env
          echo "EXPO_USERNAME=${{ secrets.EXPO_USERNAME }}" >> .env

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN_FOUNDO_SERVER }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN_FOUNDO_SERVER }}
      
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN_FOUNDO_SERVER }}
